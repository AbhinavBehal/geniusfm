{"version":3,"sources":["genius.js","NowPlaying.js","Annotation.js","trackLoader.js","App.js","serviceWorker.js","index.js"],"names":["Genius","token","Object","F_Files_IdeaProjects_geniusfm_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","path","url","includes","concat","fetch","response","json","result","error","Error","error_description","meta","status","message","title","artist","trimIndex","lastIndexOf","fixedTitle","slice","length","trim","searchPath","request","searchResults","hits","songPath","api_path","song","id","count","text","parsed","cheerio","load","eval","indexOf","children","contents","components","referents","annotationMap","Map","forEach","r","set","substr","annotations","body","html","currentLine","lyrics","annotation","addLine","push","each","c","line","name","type","data","link","$","removeAttr","get","attr","NowPlaying","react_default","a","createElement","className","alt","src","props","track","image","album","Component","Annotation","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleDetails","setState","showDetails","state","onClick","dangerouslySetInnerHTML","__html","genius","process","_callee","username","currentTrack","regenerator_default","wrap","_context","prev","next","sent","recenttracks","nowplaying","primary_artist","annotation_count","abrupt","cover_art_url","stop","loadInfo","_x","_loadInfo","apply","arguments","App","usernameSubmitted","e","preventDefault","asyncToGenerator","mark","submitted","loading","trackLoader","map","index","src_Annotation_0","key","t0","usernameChanged","target","value","react_spinners","onSubmit","placeholder","onChange","src_NowPlaying_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6bed9477.chunk.js","sourcesContent":["import cheerio from 'cheerio'\r\n\r\nclass Genius {\r\n  constructor(token) {\r\n    this.token = token;\r\n  }\r\n\r\n  async request(path) {\r\n    const url = path.includes('?') ?\r\n      `https://api.genius.com/${path}&access_token=${this.token}`\r\n      : `https://api.genius.com/${path}?access_token=${this.token}`;\r\n    const response = await fetch(url);\r\n    const result = await response.json();\r\n\r\n    if (result.error) {\r\n      throw new Error(`${result.error}: ${result.error_description}`);\r\n    }\r\n    if (result.meta.status !== 200) {\r\n      throw new Error(`${result.meta.status}: ${result.meta.message}`);\r\n    }\r\n    return result.response;\r\n  }\r\n\r\n  async song(title, artist) {\r\n    const trimIndex = title.lastIndexOf('-');\r\n    const fixedTitle = title.slice(0, trimIndex > 0 ? trimIndex : title.length).trim();;\r\n    const searchPath = `search?q=\"${fixedTitle} ${artist}\"&per_page=1`;\r\n    const searchResults = (await this.request(searchPath)).hits;\r\n    if (!searchResults || searchResults.length === 0) {\r\n      return null;\r\n    }\r\n    const songPath = searchResults[0].result.api_path.slice(1);\r\n    const { song } = await this.request(songPath);\r\n\r\n    return song;\r\n  }\r\n\r\n  async annotations(id, count) {\r\n    const url = `https://genius.com/songs/${id}/embed.js`\r\n    const response = await fetch(url);\r\n    const text = await response.text();\r\n    const parsed = cheerio.load(eval(text.slice(text.indexOf('JSON.parse('), text.lastIndexOf('))') + 1)));\r\n    const children = parsed('.rg_embed_body > p').contents();\r\n    const components = [];\r\n    const referents = await this.referents(id, count);\r\n    const annotationMap = new Map();\r\n    referents.forEach(r => {\r\n      annotationMap.set(\r\n        r.api_path.substr(r.api_path.lastIndexOf('/') + 1),\r\n        r.annotations[0].body.html)\r\n    });\r\n    let currentLine = { lyrics: '', annotation: null };\r\n    const addLine = () => {\r\n      if (currentLine.lyrics.trim().length !== 0) {\r\n        components.push(currentLine);\r\n      }\r\n      currentLine = { lyrics: '', annotation: null };\r\n    };\r\n    children.each(c => {\r\n      const line = children[c];\r\n      if (line.name === 'br') {\r\n        addLine();\r\n      } else if (line.type === 'text') {\r\n        currentLine.lyrics += line.data;\r\n      } else if (\r\n        line.name === 'i'\r\n        && line.children.length > 0\r\n        && line.children[0].type === 'text') {\r\n        currentLine.lyrics += line.children[0].data;\r\n      } else {\r\n        addLine();\r\n        const $ = cheerio.load(line);\r\n        const link = $('a');\r\n        if (link.html()) {\r\n          components.push({\r\n            lyrics: link.removeAttr('href target onclick').html(),\r\n            annotation: annotationMap.get(link.attr('data-id'))\r\n          });\r\n        }\r\n      }\r\n    });\r\n    addLine();\r\n    return components;\r\n  }\r\n\r\n  async referents(id, count) {\r\n    // todo: max per_page is 50, get error if larger\r\n    const path = `referents?song_id=${id}&text_format=html&per_page=${count > 0 ? count : 1}`;\r\n    return (await this.request(path)).referents;\r\n  }\r\n}\r\n\r\nexport default Genius;","import React, { Component } from 'react'\r\nimport './NowPlaying.css'\r\n\r\nclass NowPlaying extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"now-playing\">\r\n        <div>\r\n          <h2>now playing</h2>\r\n          <div className=\"album-art\">\r\n            <div className=\"album-img\">\r\n              <img alt=\"album art\" src={this.props.track.image}></img>\r\n            </div>\r\n            <div className=\"info\">\r\n              <span><b>{this.props.track.title}</b></span>\r\n              <span>by <b>{this.props.track.artist}</b></span>\r\n              <span>on <b>{this.props.track.album}</b></span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"lyrics\">\r\n          {this.props.track.lyrics}\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default NowPlaying;","import React, { Component } from 'react'\r\nimport './Annotation.css'\r\n\r\nclass Annotation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { showDetails: false };\r\n  }\r\n\r\n  toggleDetails = () => {\r\n    this.setState({ showDetails: !this.state.showDetails });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"annotation\">\r\n        <div\r\n          className={`lyric ${this.props.annotation ? 'lyric-has-details' : ''}`}\r\n          onClick={this.toggleDetails}\r\n          dangerouslySetInnerHTML={{ __html: this.props.lyrics }}></div>\r\n        {this.state.showDetails && this.props.annotation && (\r\n          <div className=\"details\" dangerouslySetInnerHTML={{ __html: this.props.annotation }}></div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Annotation;","import Genius from './genius';\r\n\r\nconst genius = new Genius(process.env.REACT_APP_GENIUS_API_KEY);\r\n\r\nexport async function loadInfo(username) {\r\n  const response = await fetch(\r\n    'https://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user='\r\n    + username\r\n    + '&api_key='\r\n    + process.env.REACT_APP_LAST_FM_API_KEY\r\n    + '&format=json'\r\n    + '&limit='\r\n    + 1\r\n  );\r\n  const json = await response.json();\r\n  if (json && json.error) {\r\n    throw new Error('No one found with that username');\r\n  }\r\n  const currentTrack = json.recenttracks.track[0];\r\n  if (!currentTrack || !currentTrack[\"@attr\"] || !currentTrack[\"@attr\"].nowplaying) {\r\n    throw new Error('You\\'re not currently playing anything');\r\n  }\r\n  const song = await genius.song(currentTrack.name, currentTrack.artist['#text']);\r\n  if (!song || song.primary_artist.name.trim() !== currentTrack.artist['#text'].trim()) {\r\n    throw new Error(`Couldn't find lyrics for ${currentTrack.name}`);\r\n  }\r\n  const referents = await genius.annotations(song.id, song.annotation_count);\r\n\r\n  return {\r\n    title: song.title,\r\n    album: song.album.name,\r\n    artist: song.primary_artist.name,\r\n    image: song.album.cover_art_url,\r\n    referents: referents\r\n  };\r\n}\r\n\r\nexport default loadInfo;\r\n","import React, { Component } from 'react';\nimport { ScaleLoader } from 'react-spinners';\nimport './App.css';\nimport NowPlaying from './NowPlaying';\nimport Annotation from './Annotation';\nimport trackLoader from './trackLoader';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      submitted: false,\n      track: null,\n      loading: false,\n      error: null\n    };\n  }\n\n  usernameSubmitted = (e) => {\n    e.preventDefault();\n    this.loadInfo();\n  }\n\n  loadInfo = async () => {\n    this.setState({ submitted: false, loading: true });\n    try {\n      const track = await trackLoader(this.state.username);\n      track.lyrics = track.referents.map((r, index) => {\n        return <Annotation key={index} lyrics={r.lyrics} annotation={r.annotation}></Annotation>\n      });\n      this.setState({ submitted: true, track: track, loading: false, error: null });\n    } catch (err) {\n      this.setState({ loading: false, error: err.message });\n    }\n  }\n\n  usernameChanged = (e) => {\n    this.setState({ username: e.target.value, error: null });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1>genius.fm</h1>\n        {\n          this.state.loading ?\n            (\n              <ScaleLoader\n                loading={this.state.loading}>\n              </ScaleLoader>\n            ) :\n            (\n              <form\n                className={`user-search ${this.state.submitted ? 'submitted' : ''}`}\n                onSubmit={this.usernameSubmitted}>\n                <input\n                  type=\"text\"\n                  placeholder=\"your last.fm username\"\n                  value={this.state.username}\n                  onChange={this.usernameChanged}>\n                </input>\n              </form>\n            )\n        }\n        {\n          this.state.error && (\n            <p className=\"error\">{this.state.error}</p>\n          )\n        }\n        <div className={`container ${this.state.submitted ? 'move-up' : ''}`}>\n          {this.state.submitted && (\n            <NowPlaying track={this.state.track} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}