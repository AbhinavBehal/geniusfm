{"version":3,"sources":["genius.js","NowPlaying.js","Annotation.js","trackLoader.js","App.js","serviceWorker.js","index.js"],"names":["Genius","token","Object","F_Files_IdeaProjects_geniusfm_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","path","url","includes","concat","fetch","response","json","result","error","Error","error_description","meta","status","message","title","artist","searchPath","request","songPath","hits","api_path","slice","song","id","count","text","parsed","cheerio","load","eval","indexOf","lastIndexOf","children","contents","components","referents","annotationMap","Map","forEach","r","set","annotations","body","html","each","c","line","type","data","trim","length","push","lyrics","name","$","removeAttr","annotation","get","attribs","completeUrl","NowPlaying","react_default","a","createElement","className","alt","src","props","track","image","album","Component","Annotation","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleDetails","setState","showDetails","state","onClick","dangerouslySetInnerHTML","__html","_callee","username","currentTrack","genius","regenerator_default","wrap","_context","prev","next","sent","console","log","abrupt","recenttracks","nowplaying","process","annotation_count","primary_artist","stop","loadInfo","_x","_loadInfo","apply","arguments","App","usernameSubmitted","e","preventDefault","asyncToGenerator","mark","trackLoader","value","map","index","src_Annotation_0","key","submitted","usernameChanged","target","onSubmit","placeholder","onChange","src_NowPlaying_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e69fc0d.chunk.js","sourcesContent":["import cheerio from 'cheerio'\r\n\r\nclass Genius {\r\n  constructor(token) {\r\n    this.token = token;\r\n  }\r\n\r\n  async request(path) {\r\n    const url = path.includes('?') ?\r\n      `https://api.genius.com/${path}&access_token=${this.token}`\r\n      : `https://api.genius.com/${path}?access_token=${this.token}`;\r\n    const response = await fetch(url);\r\n    const result = await response.json();\r\n\r\n    if (result.error) {\r\n      throw new Error(`${result.error}: ${result.error_description}`);\r\n    }\r\n    if (result.meta.status !== 200) {\r\n      throw new Error(`${result.meta.status}: ${result.meta.message}`);\r\n    }\r\n    return result.response;\r\n  }\r\n\r\n  async song(title, artist) {\r\n    const searchPath = `search?q=\"${title} - ${artist}\"`;\r\n    const songPath = (await this.request(searchPath)).hits[0].result.api_path.slice(1);\r\n    const { song } = await this.request(songPath);\r\n\r\n    return song;\r\n  }\r\n\r\n  async annotations(id, count) {\r\n    const url = `https://cors-anywhere.herokuapp.com/https://genius.com/songs/${id}/embed.js`\r\n    const response = await fetch(url);\r\n    const text = await response.text();\r\n    const parsed = cheerio.load(eval(text.slice(text.indexOf('JSON.parse('), text.lastIndexOf('))') + 1)));\r\n    const children = parsed('.rg_embed_body > p').contents();\r\n    const components = [];\r\n    const referents = await this.referents(id, count);\r\n    const annotationMap = new Map();\r\n    referents.forEach(r => {\r\n      annotationMap.set('' + r.id, r.annotations[0].body.html)\r\n    });\r\n    children.each(c => {\r\n      const line = children[c];\r\n      if (line.type === 'text' && line.data.trim().length !== 0) {\r\n        components.push({ lyrics: line.data })\r\n      } else if (line.name === 'a') {\r\n        const $ = cheerio.load(line);\r\n        components.push({\r\n          lyrics: $('a').removeAttr('href target onclick').html(),\r\n          annotation: annotationMap.get(line.attribs['data-id'])\r\n        })\r\n      }\r\n    });\r\n    return components;\r\n  }\r\n\r\n  async referents(id, count) {\r\n    const path = `referents?song_id=${id}&text_format=html&per_page=${count > 0 ? count : 1}`;\r\n    return (await this.request(path)).referents;\r\n  }\r\n\r\n  async scrapeLyrics(url) {\r\n    const completeUrl = `https://cors-anywhere.herokuapp.com/${url}`;\r\n    const response = await fetch(completeUrl);\r\n    const text = await response.text();\r\n    const parsed = cheerio.load(text);\r\n    return parsed('.lyrics')\r\n      .text()\r\n      .trim();\r\n  }\r\n}\r\n\r\nexport default Genius;","import React, { Component } from 'react'\r\nimport './NowPlaying.css'\r\n\r\nclass NowPlaying extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"now-playing\">\r\n        <h2>now playing</h2>\r\n        <div className=\"album-art\">\r\n          <div className=\"album-img\">\r\n            <img alt=\"album art\" src={this.props.track.image}></img>\r\n          </div>\r\n          <div className=\"info\">\r\n            <span><b>{this.props.track.title}</b></span>\r\n            <span>by <b>{this.props.track.artist}</b></span>\r\n            <span>on <b>{this.props.track.album}</b></span>\r\n          </div>\r\n        </div>\r\n        <div className=\"lyrics\">\r\n          {this.props.track.lyrics}\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default NowPlaying;","import React, { Component } from 'react'\r\nimport './Annotation.css'\r\n\r\nclass Annotation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { showDetails: false };\r\n  }\r\n\r\n  toggleDetails = () => {\r\n    this.setState({ showDetails: !this.state.showDetails });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"annotation\">\r\n        <div\r\n          className={`lyric ${this.props.annotation ? 'lyric-has-details' : ''}`}\r\n          onClick={this.toggleDetails}\r\n          dangerouslySetInnerHTML={{ __html: this.props.lyrics }}></div>\r\n        {this.state.showDetails && this.props.annotation && (\r\n          <div className=\"details\" dangerouslySetInnerHTML={{ __html: this.props.annotation }}></div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Annotation;","import Genius from './genius';\r\n\r\nexport async function loadInfo(username) {\r\n  const response = await fetch(\r\n    'https://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user='\r\n    + username\r\n    + '&api_key='\r\n    + process.env.REACT_APP_LAST_FM_API_KEY\r\n    + '&format=json'\r\n  );\r\n  const json = await response.json();\r\n  if (json && json.error) {\r\n    // couldn't find user or some other error\r\n    console.log(json.message);\r\n    return;\r\n  }\r\n  const currentTrack = json.recenttracks.track[0];\r\n  if (!currentTrack[\"@attr\"] || !currentTrack[\"@attr\"].nowplaying) {\r\n    console.log('not currently playing anything');\r\n    return;\r\n  }\r\n\r\n  const genius = new Genius(process.env.REACT_APP_GENIUS_API_KEY);\r\n  const song = await genius.song(currentTrack.name, currentTrack.artist[\"#text\"]);\r\n  const referents = await genius.annotations(song.id, song.annotation_count);\r\n  // todo: sometimes track isn't on genius\r\n\r\n  return {\r\n    title: song.title,\r\n    album: song.album.name,\r\n    artist: song.primary_artist.name,\r\n    image: currentTrack.image[currentTrack.image.length - 1][\"#text\"],\r\n    referents: referents\r\n  };\r\n}\r\n\r\nexport default loadInfo;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport NowPlaying from './NowPlaying';\nimport Annotation from './Annotation';\nimport trackLoader from './trackLoader';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { value: '', submitted: false, track: null };\n  }\n\n  usernameSubmitted = (e) => {\n    e.preventDefault();\n    this.loadInfo();\n  }\n\n  loadInfo = async () => {\n    const track = await trackLoader(this.state.value);\n    track.lyrics = track.referents.map((r, index) => {\n      return <Annotation key={index} lyrics={r.lyrics} annotation={r.annotation}></Annotation>\n    });\n    this.setState({ submitted: true, track: track });\n  }\n\n  usernameChanged = (e) => {\n    this.setState({ value: e.target.value });\n    // todo: decide on what to do when there's no text\n    if (e.target.value === '') {\n      this.setState({ submitted: false });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1>genius.fm</h1>\n        <form className=\"user-search\" onSubmit={this.usernameSubmitted}>\n          <input type=\"text\" placeholder=\"your last.fm username\" onChange={this.usernameChanged}></input>\n        </form>\n        <div className={`container ${this.state.submitted ? 'move-up' : ''}`}>\n          {this.state.submitted && (\n            <NowPlaying track={this.state.track} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}